.ProseMirror {
	position: relative;
}

.ProseMirror {
	word-wrap: break-word;
	white-space: pre-wrap;
	-webkit-font-variant-ligatures: none;
	font-variant-ligatures: none;
}

.ProseMirror pre {
	white-space: pre-wrap;

}
.ProseMirror mark {
	background-color: rgb(236, 240, 10);

}
.ProseMirror li {
	position: relative;
}

.ProseMirror-hideselection *::selection { background: transparent; }
.ProseMirror-hideselection *::-moz-selection { background: transparent; }
.ProseMirror-hideselection { caret-color: transparent; }

.ProseMirror-selectednode {
	outline: 2px solid #8cf;
}

/* Make sure li selections wrap around markers */

li.ProseMirror-selectednode {
	outline: none;
}

li.ProseMirror-selectednode:after {
	content: "";
	position: absolute;
	left: -32px;
	right: -2px; top: -2px; bottom: -2px;
	border: 2px solid #8cf;
	pointer-events: none;
}
.ProseMirror-textblock-dropdown {
	min-width: 3em;
}

.ProseMirror-menu {
	margin: 0 -4px;
	line-height: 1;
}

.ProseMirror-tooltip .ProseMirror-menu {
	width: -webkit-fit-content;
	width: fit-content;
	white-space: pre;
}

.ProseMirror-menuitem {
	margin-right: 3px;
	display: inline-block;
}

.ProseMirror-menuseparator {
	border-right: 1px solid #ddd;
	margin-right: 3px;
}

.ProseMirror-menu-dropdown, .ProseMirror-menu-dropdown-menu {
	font-size: 90%;
	white-space: nowrap;
}

.ProseMirror-menu-dropdown {
	vertical-align: 1px;
	cursor: pointer;
	position: relative;
	padding-right: 15px;
}

.ProseMirror-menu-dropdown-wrap {
	padding: 1px 0 1px 4px;
	display: inline-block;
	position: relative;
}

.ProseMirror-menu-dropdown:after {
	content: "";
	border-left: 4px solid transparent;
	border-right: 4px solid transparent;
	border-top: 4px solid currentColor;
	opacity: .6;
	position: absolute;
	right: 4px;
	top: calc(50% - 2px);
}

.ProseMirror-menu-dropdown-menu, .ProseMirror-menu-submenu {
	position: absolute;
	background: white;
	color: #666;
	border: 1px solid #aaa;
	padding: 2px;
}

.ProseMirror-menu-dropdown-menu {
	z-index: 15;
	min-width: 6em;
}

.ProseMirror-menu-dropdown-item {
	cursor: pointer;
	padding: 2px 8px 2px 4px;
}

.ProseMirror-menu-dropdown-item:hover {
	background: #f2f2f2;
}

.ProseMirror-menu-submenu-wrap {
	position: relative;
	margin-right: -4px;
}

.ProseMirror-menu-submenu-label:after {
	content: "";
	border-top: 4px solid transparent;
	border-bottom: 4px solid transparent;
	border-left: 4px solid currentColor;
	opacity: .6;
	position: absolute;
	right: 4px;
	top: calc(50% - 4px);
}

.ProseMirror-menu-submenu {
	display: none;
	min-width: 4em;
	left: 100%;
	top: -3px;
}

.ProseMirror-menu-active {
	background: #eee;
	border-radius: 4px;
}

.ProseMirror-menu-active {
	background: #eee;
	border-radius: 4px;
}

.ProseMirror-menu-disabled {
	opacity: .3;
}

.ProseMirror-menu-submenu-wrap:hover .ProseMirror-menu-submenu, .ProseMirror-menu-submenu-wrap-active .ProseMirror-menu-submenu {
	display: block;
	color: yellow;
}
.menutitle{
	text-align: center;
	margin:10 auto;
}
.ProseMirror-menubar {
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
	position: relative;
	min-height: 1.5em;
	color: white;
	font-size: larger;
	padding: 1px 6px;
	top: 0; left: 0; right: 0;
	border-bottom: 1px solid silver;
	background: #007bff;
	z-index: 10;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	overflow: visible;
	
}

.ProseMirror-icon {
	display: inline-block;
	line-height: .8;
	vertical-align: -2px; /* Compensate for padding */
	padding: 2px 8px;
	cursor: pointer;
}

.ProseMirror-menu-disabled.ProseMirror-icon {
	cursor: default;
}

.ProseMirror-icon svg {
	fill: currentColor;
	height: 1em;
}

.ProseMirror-icon span {
	vertical-align: text-top;
}
.ProseMirror-gapcursor {
	display: none;
	pointer-events: none;
	position: absolute;
}

.ProseMirror-gapcursor:after {
	content: "";
	display: block;
	position: absolute;
	top: -2px;
	width: 20px;
	border-top: 1px solid black;
	animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
	to {
		visibility: hidden;
	}
}

.ProseMirror-focused .ProseMirror-gapcursor {
	display: block;
}
/* Add space around the hr to make clicking it easier */

.ProseMirror-example-setup-style hr {
	padding: 2px 10px;
	border: none;
	margin: 1em 0;
}

.ProseMirror-example-setup-style hr:after {
	content: "";
	display: block;
	height: 1px;
	background-color: silver;
	line-height: 2px;
}

.ProseMirror ul, .ProseMirror ol {
	padding-left: 30px;
}

.ProseMirror blockquote {
	padding-left: 1em;
	border-left: 3px solid #eee;
	margin-left: 0; margin-right: 0;
	background-color: rgb(225, 250, 255);
}

.ProseMirror-example-setup-style img {
	cursor: default;
}

.ProseMirror-prompt {
	background: white;
	padding: 5px 10px 5px 15px;
	border: 1px solid silver;
	position: fixed;
	border-radius: 3px;
	z-index: 11;
	box-shadow: -.5px 2px 5px rgba(0, 0, 0, .2);
}

.ProseMirror-prompt h5 {
	margin: 0;
	font-weight: normal;
	font-size: 100%;
	color: #444;
}

.ProseMirror-prompt input[type="text"],
.ProseMirror-prompt textarea {
	background: #eee;
	border: none;
	outline: none;
}

.ProseMirror-prompt input[type="text"] {
	padding: 0 4px;
}

.ProseMirror-prompt-close {
	position: absolute;
	left: 2px; top: 1px;
	color: #666;
	border: none; background: transparent; padding: 0;
}

.ProseMirror-prompt-close:after {
	content: "âœ•";
	font-size: 12px;
}

.ProseMirror-invalid {
	background: #ffc;
	border: 1px solid #cc7;
	border-radius: 4px;
	padding: 5px 10px;
	position: absolute;
	min-width: 10em;
}

.ProseMirror-prompt-buttons {
	margin-top: 5px;
	display: none;
}
#editor, .editor {
	align-items: center;
	background: white;
	color: black;
	background-clip: padding-box;
	border-radius: 4px;
	border: 2px solid rgba(0, 0, 0, 0.2);
	padding: 5px 0;
	margin-bottom: 23px;
	text-align: center;
	
}

.ProseMirror p:first-child,
.ProseMirror h1:first-child,
.ProseMirror h2:first-child,
.ProseMirror h3:first-child,
.ProseMirror h4:first-child,
.ProseMirror h5:first-child,
.ProseMirror h6:first-child {
	margin-top: 10px;
}

.ProseMirror {
	padding: 4px 8px 4px 14px;
	line-height: 1.2;
	outline: none;
	
	height:500px;
}

.ProseMirror p { margin-bottom: 1em }



  .menubar {
    border-bottom: 1px solid rgba(0, 0, 0, 0.2);
    line-height: 0.1;
  }
  .menuicon {
    display: inline-block;
    border-right: 1px solid rgba(0, 0, 0, 0.2);
    color: rgb(12, 10, 119);
    line-height: 1;
    padding: 0 7px;
    margin: 1px;
    cursor: pointer;
    text-align: center;
    min-width: 1.4em;
  }
  .strong, .heading { font-weight: bold; }
  .em { font-style: italic; }

  #editor { padding-top: 0 }
  placeholder {
	display: inline;
	border: 1px solid #ccc;
	color: #ccc;
  }
  placeholder:after {
	content: "☁";
	font-size: 200%;
	line-height: 0.1;
	font-weight: bold;
  }
  .ProseMirror img { max-width: 100px }

  /* this is a rough fix for the first cursor position when the first paragraph is empty */
  .ProseMirror > .ProseMirror-yjs-cursor:first-child {
	margin-top: 16px;
  }
  .ProseMirror p:first-child, .ProseMirror h1:first-child, .ProseMirror h2:first-child, .ProseMirror h3:first-child, .ProseMirror h4:first-child, .ProseMirror h5:first-child, .ProseMirror h6:first-child {
	margin-top: 16px
  }
  /* This gives the remote user caret. The colors are automatically overwritten*/
  .ProseMirror-yjs-cursor {
	position: relative;
	margin-left: -1px;
	margin-right: -1px;
	border-left: 1px solid black;
	border-right: 1px solid black;
	border-color: orange;
	word-break: normal;
	pointer-events: none;
  }
  /* This renders the username above the caret */
  .ProseMirror-yjs-cursor > div {
	position: absolute;
	top: -1.05em;
	left: -1px;
	font-size: 13px;
	background-color: rgb(250, 129, 0);
	font-family: serif;
	font-style: normal;
	font-weight: normal;
	line-height: normal;
	user-select: none;
	color: white;
	padding-left: 2px;
	padding-right: 2px;
	white-space: nowrap;
  }
  #y-functions {
	position: absolute;
	top: 20px;
	right: 20px;
  }
  #y-functions > * {
	display: inline-block;
  }
  
.CodeMirror {
	/* Set height, width, borders, and global font properties here */
	font-family: 'Source Code Pro';
	font-size: 14px;
	font-weight: 500;
	height: auto;
	background-color: rgb(251,251,251);
	color:#2e383c;
	line-height:1.6rem;
	padding: 0 10px 0 0; 
	width: 80%;
	max-width: 800px;
	margin: 30px auto;
	direction: ltr;
  }
  
  /* PADDING */
  
  .CodeMirror-lines {
	padding: 4px 0; /* Vertical padding around content */
  }
  .CodeMirror pre.CodeMirror-line,
  .CodeMirror pre.CodeMirror-line-like {
	padding: 0 4px; /* Horizontal padding of content */
  }
  
  .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
	background-color: rgb(251,251,251); /* The little square between H and V scrollbars */
  }
  
  /* GUTTER */
  
  .CodeMirror-gutters {
	/* border-right: 1px solid #ddd; */
	/* background-color: #f7f7f7; */
	white-space: nowrap;
  }
  .CodeMirror-linenumbers {}
  .CodeMirror-linenumber {
	padding: 0 10px 0 5px;
	min-width: 20px;
	text-align: right;
	color: #999;
	white-space: nowrap;
  }
  
  .CodeMirror-guttermarker { color: black; }
  .CodeMirror-guttermarker-subtle { color: #999; }
  
  /* CURSOR */
  
  .CodeMirror-cursor {
	border-left: 2px solid rgb(205, 80, 70);
	border-right: none;
	width: 0;
  }
  /* Shown when moving in bi-directional text */
  .CodeMirror div.CodeMirror-secondarycursor {
	border-left: 1px solid silver;
  }
  .cm-fat-cursor .CodeMirror-cursor {
	width: auto;
	border: 0 !important;
	background: #7e7;
  }
  .cm-fat-cursor div.CodeMirror-cursors {
	z-index: 1;
  }
  .cm-fat-cursor-mark {
	background-color: rgba(20, 255, 20, 0.5);
	-webkit-animation: blink 1.06s steps(1) infinite;
	-moz-animation: blink 1.06s steps(1) infinite;
	animation: blink 1.06s steps(1) infinite;
  }
  .cm-animate-fat-cursor {
	width: auto;
	border: 0;
	-webkit-animation: blink 1.06s steps(1) infinite;
	-moz-animation: blink 1.06s steps(1) infinite;
	animation: blink 1.06s steps(1) infinite;
	background-color: #7e7;
  }
  @-moz-keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
  }
  @-webkit-keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
  }
  @keyframes blink {
	0% {}
	50% { background-color: transparent; }
	100% {}
  }
  
  /* Can style cursor different in overwrite (non-insert) mode */
  .CodeMirror-overwrite .CodeMirror-cursor {}
  
  .cm-tab { display: inline-block; text-decoration: inherit; }
  
  .CodeMirror-rulers {
	position: absolute;
	left: 0; right: 0; top: -50px; bottom: 0;
	overflow: hidden;
  }
  .CodeMirror-ruler {
	border-left: 1px solid #ccc;
	top: 0; bottom: 0;
	position: absolute;
  }
  
  /* DEFAULT THEME */
  .cm-s-default .cm-header { color:#318aca; }
  .cm-s-default .cm-quote {color: #090;}
  .cm-negative {color: #d44;}
  .cm-positive {color: #292;}
  .cm-header, .cm-strong {font-weight: bold;}
  .cm-em {font-style: italic;}
  .cm-link {text-decoration: underline;}
  .cm-strikethrough {text-decoration: line-through;}
  
  .cm-s-default .cm-keyword { color:#318aca; }
  .cm-s-default .cm-atom { color:#8b3e8b; }
  .cm-s-default .cm-number { color:#318aca;}
  .cm-s-default .cm-def { color:#2e383c; }
  .cm-s-default .cm-node { color:#d4680a; }
  .cm-s-default .cm-variable { color:#2e383c; }
  .cm-s-default .cm-punctuation,
  .cm-s-default .cm-property,
  .cm-s-default .cm-operator { color:#8b3e8b; }
  .cm-s-default .cm-variable-2 { color:#2e383c; }
  .cm-s-default .cm-variable-3, .cm-s-default .cm-type {color:#2e383c;}
  .cm-s-default .cm-comment { color:#75787b; }
  .cm-s-default .cm-string { color:#d4680a; }
  .cm-s-default .cm-string-2 { color:#d4680a; }
  .cm-s-default .cm-meta { color:#75787b; }
  .cm-s-default .cm-qualifier { color:#047d65; }
  .cm-s-default .cm-builtin {color: #30a;}
  .cm-s-default .cm-bracket {color: #997;}
  .cm-s-default .cm-tag { color:#9c3328; }
  .cm-s-default .cm-attribute { color:#318aca; }
  .cm-s-default .cm-hr { color:#75787b; }
  .cm-s-default .cm-link { color:#318aca; }
  
  .cm-s-default .cm-error {color: #f00;}
  .cm-invalidchar {color: #f00;}
  
  .CodeMirror-composing { border-bottom: 2px solid; }
  
  /* Default styles for common addons */
  
  div.CodeMirror span.CodeMirror-matchingbracket {color: #0f0;}
  div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #f22;}
  .CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }
  .CodeMirror-activeline-background {background: #e8f2ff;}
  
  /* STOP */
  
  /* The rest of this file contains styles related to the mechanics of
	 the editor. You probably shouldn't touch them. */
  
  .CodeMirror {
	position: relative;
	overflow: hidden;
	background: rgb(251,251,251);
  }
  
  .CodeMirror-scroll {
	overflow: scroll !important; /* Things will break if this is overridden */
	/* 50px is the magic margin used to hide the element's real scrollbars */
	/* See overflow: hidden in .CodeMirror */
	margin-bottom: -50px; margin-right: -50px;
	padding-bottom: 50px;
	height: 100%;
	outline: none; /* Prevent dragging from highlighting the element */
	position: relative;
  }
  .CodeMirror-sizer {
	position: relative;
	border-right: 50px solid transparent;
  }
  
  /* The fake, visible scrollbars. Used to force redraw during scrolling
	 before actual scrolling happens, thus preventing shaking and
	 flickering artifacts. */
  .CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
	position: absolute;
	z-index: 6;
	display: none;
  }
  .CodeMirror-vscrollbar {
	right: 0; top: 0;
	overflow-x: hidden;
	overflow-y: scroll;
  }
  .CodeMirror-hscrollbar {
	bottom: 0; left: 0;
	overflow-y: hidden;
	overflow-x: scroll;
  }
  .CodeMirror-scrollbar-filler {
	right: 0; bottom: 0;
  }
  .CodeMirror-gutter-filler {
	left: 0; bottom: 0;
  }
  
  .CodeMirror-gutters {
	position: absolute; left: 0; top: 0;
	min-height: 100%;
	z-index: 3;
  }
  .CodeMirror-gutter {
	white-space: normal;
	height: 100%;
	display: inline-block;
	vertical-align: top;
	margin-bottom: -50px;
  }
  .CodeMirror-gutter-wrapper {
	position: absolute;
	z-index: 4;
	background: none !important;
	border: none !important;
  }
  .CodeMirror-gutter-background {
	position: absolute;
	top: 0; bottom: 0;
	z-index: 4;
  }
  .CodeMirror-gutter-elt {
	position: absolute;
	cursor: default;
	z-index: 4;
  }
  .CodeMirror-gutter-wrapper ::selection { background-color: transparent }
  .CodeMirror-gutter-wrapper ::-moz-selection { background-color: transparent }
  
  .CodeMirror-lines {
	cursor: text;
	min-height: 1px; /* prevents collapsing before first draw */
  }
  .CodeMirror pre.CodeMirror-line,
  .CodeMirror pre.CodeMirror-line-like {
	/* Reset some styles that the rest of the page might have set */
	-moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0;
	border-width: 0;
	background: transparent;
	font-family: inherit;
	font-size: inherit;
	margin: 0;
	white-space: pre;
	word-wrap: normal;
	line-height: inherit;
	color: inherit;
	z-index: 2;
	position: relative;
	overflow: visible;
	-webkit-tap-highlight-color: transparent;
	-webkit-font-variant-ligatures: contextual;
	font-variant-ligatures: contextual;
  }
  .CodeMirror-wrap pre.CodeMirror-line,
  .CodeMirror-wrap pre.CodeMirror-line-like {
	word-wrap: break-word;
	white-space: pre-wrap;
	word-break: normal;
  }
  
  .CodeMirror-linebackground {
	position: absolute;
	left: 0; right: 0; top: 0; bottom: 0;
	z-index: 0;
  }
  
  .CodeMirror-linewidget {
	position: relative;
	z-index: 2;
	padding: 0.1px; /* Force widget margins to stay inside of the container */
  }
  
  .CodeMirror-widget {}
  
  .CodeMirror-rtl pre { direction: rtl; }
  
  .CodeMirror-code {
	outline: none;
  }
  
  /* Force content-box sizing for the elements where we expect it */
  .CodeMirror-scroll,
  .CodeMirror-sizer,
  .CodeMirror-gutter,
  .CodeMirror-gutters,
  .CodeMirror-linenumber {
	-moz-box-sizing: content-box;
	box-sizing: content-box;
  }
  
  .CodeMirror-measure {
	position: absolute;
	width: 100%;
	height: 0;
	overflow: hidden;
	visibility: hidden;
  }
  
  .CodeMirror-cursor {
	position: absolute;
	pointer-events: none;
  }
  .CodeMirror-measure pre { position: static; }
  
  div.CodeMirror-cursors {
	visibility: hidden;
	position: relative;
	z-index: 3;
  }
  div.CodeMirror-dragcursors {
	visibility: visible;
  }
  
  .CodeMirror-focused div.CodeMirror-cursors {
	visibility: visible;
  }
  
  .CodeMirror-selected { background: #d9d9d9; }
  .CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }
  .CodeMirror-crosshair { cursor: crosshair; }
  .CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }
  .CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }
  
  .cm-searching {
	background-color: #ffa;
	background-color: rgba(255, 255, 0, .4);
  }
  
  /* Used to force a border model for a node */
  .cm-force-border { padding-right: .1px; }
  
  @media print {
	/* Hide the cursor when printing */
	.CodeMirror div.CodeMirror-cursors {
	  visibility: hidden;
	}
  }
  
  /* See issue #2901 */
  .cm-tab-wrap-hack:after { content: ''; }
  
  /* Help users use markselection to safely style text background */
  span.CodeMirror-selectedtext { background: none; }

  .ProseMirror .CodeMirror {
	/* Set height, width, borders, and global font properties here */
	font-family: 'Source Code Pro';
	font-size: 14px;
	font-weight: 500;
	height: auto;
	background-color:#ffffff;
	border: 1px solid #eee;
	border-radius: 3px;
	color:#2e383c;
	line-height:1.6rem;
	padding: 0 10px;
	width: 100%;
	max-width: 800px;
	margin: 0 auto;
  }

