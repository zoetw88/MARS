[{"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\inputrules.js":"1","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\menu.js":"2","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\prosemirror-menu.js":"3","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\schema.js":"4","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\index.js":"5","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\App.js":"6","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\code_block.js":"7","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\index.js":"8","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\icons.js":"9"},{"size":2452,"mtime":1606391208371,"results":"10","hashOfConfig":"11"},{"size":8300,"mtime":1606469636446,"results":"12","hashOfConfig":"11"},{"size":20850,"mtime":1606467526169,"results":"13","hashOfConfig":"11"},{"size":6482,"mtime":1606471340824,"results":"14","hashOfConfig":"11"},{"size":2562,"mtime":1606466639336,"results":"15","hashOfConfig":"11"},{"size":2096,"mtime":1606472224722,"results":"16","hashOfConfig":"11"},{"size":6121,"mtime":1606472643798,"results":"17","hashOfConfig":"11"},{"size":450,"mtime":1606395059239,"results":"18","hashOfConfig":"11"},{"size":1696,"mtime":1606399419437,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"uqo73p",{"filePath":"22","messages":"23","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\inputrules.js",["40","41","42","43","44","45"],"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\menu.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62"],"import {wrapItem, blockTypeItem, Dropdown, DropdownSubmenu, joinUpItem, liftItem,\r\n    selectParentNodeItem, undoItem, redoItem, icons, MenuItem} from \"./prosemirror-menu\"\r\nimport {NodeSelection} from \"prosemirror-state\"\r\nimport {toggleMark} from \"prosemirror-commands\"\r\nimport {wrapInList} from \"prosemirror-schema-list\"\r\nimport {TextField, openPrompt} from \"./prompt\"\r\n\r\n// Helpers to create specific types of items\r\n\r\nfunction canInsert(state, nodeType) {\r\nlet $from = state.selection.$from\r\nfor (let d = $from.depth; d >= 0; d--) {\r\n let index = $from.index(d)\r\n if ($from.node(d).canReplaceWith(index, index, nodeType)) return true\r\n}\r\nreturn false\r\n}\r\n\r\nfunction insertImageItem(nodeType) {\r\nreturn new MenuItem({\r\n title: \"Insert image\",\r\n label: \"Image\",\r\n enable(state) { return canInsert(state, nodeType) },\r\n run(state, _, view) {\r\n   let {from, to} = state.selection, attrs = null\r\n   if (state.selection instanceof NodeSelection && state.selection.node.type === nodeType)\r\n     attrs = state.selection.node.attrs\r\n   openPrompt({\r\n     title: \"Insert image\",\r\n     fields: {\r\n       src: new TextField({label: \"Location\", required: true, value: attrs && attrs.src}),\r\n       title: new TextField({label: \"Title\", value: attrs && attrs.title}),\r\n       alt: new TextField({label: \"Description\",\r\n                           value: attrs ? attrs.alt : state.doc.textBetween(from, to, \" \")})\r\n     },\r\n     callback(attrs) {\r\n       view.dispatch(view.state.tr.replaceSelectionWith(nodeType.createAndFill(attrs)))\r\n       view.focus()\r\n     }\r\n   })\r\n }\r\n})\r\n}\r\n\r\nfunction cmdItem(cmd, options) {\r\nlet passedOptions = {\r\n label: options.title,\r\n run: cmd\r\n}\r\nfor (let prop in options) passedOptions[prop] = options[prop]\r\nif ((!options.enable || options.enable === true) && !options.select)\r\n passedOptions[options.enable ? \"enable\" : \"select\"] = state => cmd(state)\r\n\r\nreturn new MenuItem(passedOptions)\r\n}\r\n\r\nfunction markActive(state, type) {\r\nlet {from, $from, to, empty} = state.selection\r\nif (empty) return type.isInSet(state.storedMarks || $from.marks())\r\nelse return state.doc.rangeHasMark(from, to, type)\r\n}\r\n\r\nfunction markItem(markType, options) {\r\nlet passedOptions = {\r\n active(state) { return markActive(state, markType) },\r\n enable: true\r\n}\r\nfor (let prop in options) passedOptions[prop] = options[prop]\r\nreturn cmdItem(toggleMark(markType), passedOptions)\r\n}\r\n\r\nfunction linkItem(markType) {\r\nreturn new MenuItem({\r\n title: \"Add or remove link\",\r\n icon: icons.link,\r\n active(state) { return markActive(state, markType) },\r\n enable(state) { return !state.selection.empty },\r\n run(state, dispatch, view) {\r\n   if (markActive(state, markType)) {\r\n     toggleMark(markType)(state, dispatch)\r\n     return true\r\n   }\r\n   openPrompt({\r\n     title: \"Create a link\",\r\n     fields: {\r\n       href: new TextField({\r\n         label: \"Link target\",\r\n         required: true\r\n       }),\r\n       title: new TextField({label: \"Title\"})\r\n     },\r\n     callback(attrs) {\r\n       toggleMark(markType, attrs)(view.state, view.dispatch)\r\n       view.focus()\r\n     }\r\n   })\r\n }\r\n})\r\n}\r\n\r\nfunction wrapListItem(nodeType, options) {\r\nreturn cmdItem(wrapInList(nodeType, options.attrs), options)\r\n}\r\n\r\n// :: (Schema) â†’ Object\r\n// Given a schema, look for default mark and node types in it and\r\n// return an object with relevant menu items relating to those marks:\r\n//\r\n// **`toggleStrong`**`: MenuItem`\r\n//   : A menu item to toggle the [strong mark](#schema-basic.StrongMark).\r\n//\r\n// **`toggleEm`**`: MenuItem`\r\n//   : A menu item to toggle the [emphasis mark](#schema-basic.EmMark).\r\n//\r\n// **`toggleCode`**`: MenuItem`\r\n//   : A menu item to toggle the [code font mark](#schema-basic.CodeMark).\r\n//\r\n// **`toggleLink`**`: MenuItem`\r\n//   : A menu item to toggle the [link mark](#schema-basic.LinkMark).\r\n//\r\n// **`insertImage`**`: MenuItem`\r\n//   : A menu item to insert an [image](#schema-basic.Image).\r\n//\r\n// **`wrapBulletList`**`: MenuItem`\r\n//   : A menu item to wrap the selection in a [bullet list](#schema-list.BulletList).\r\n//\r\n// **`wrapOrderedList`**`: MenuItem`\r\n//   : A menu item to wrap the selection in an [ordered list](#schema-list.OrderedList).\r\n//\r\n// **`wrapBlockQuote`**`: MenuItem`\r\n//   : A menu item to wrap the selection in a [block quote](#schema-basic.BlockQuote).\r\n//\r\n// **`makeParagraph`**`: MenuItem`\r\n//   : A menu item to set the current textblock to be a normal\r\n//     [paragraph](#schema-basic.Paragraph).\r\n//\r\n// **`makeCodeBlock`**`: MenuItem`\r\n//   : A menu item to set the current textblock to be a\r\n//     [code block](#schema-basic.CodeBlock).\r\n//\r\n// **`makeHead[N]`**`: MenuItem`\r\n//   : Where _N_ is 1 to 6. Menu items to set the current textblock to\r\n//     be a [heading](#schema-basic.Heading) of level _N_.\r\n//\r\n// **`insertHorizontalRule`**`: MenuItem`\r\n//   : A menu item to insert a horizontal rule.\r\n//\r\n// The return value also contains some prefabricated menu elements and\r\n// menus, that you can use instead of composing your own menu from\r\n// scratch:\r\n//\r\n// **`insertMenu`**`: Dropdown`\r\n//   : A dropdown containing the `insertImage` and\r\n//     `insertHorizontalRule` items.\r\n//\r\n// **`typeMenu`**`: Dropdown`\r\n//   : A dropdown containing the items for making the current\r\n//     textblock a paragraph, code block, or heading.\r\n//\r\n// **`fullMenu`**`: [[MenuElement]]`\r\n//   : An array of arrays of menu elements for use as the full menu\r\n//     for, for example the [menu bar](https://github.com/prosemirror/prosemirror-menu#user-content-menubar).\r\nexport function buildMenuItems(schema) {\r\nlet r = {}, type\r\nif (type = schema.marks.strikethrough)\r\nr.toggleStrike = markItem(type, {title: 'Strikethrough', icon:icons.strikethrough})\r\nif (type = schema.marks.strong)\r\n r.toggleStrong = markItem(type, {title: \"Toggle strong style\", icon: icons.strong})\r\nif (type = schema.marks.em)\r\n r.toggleEm = markItem(type, {title: \"Toggle emphasis\", icon: icons.em})\r\n if (type = schema.marks.underline)\r\n r.toggleUnderline = markItem(type, {title: \"Underline\", icon: icons.underline})\r\nif (type = schema.marks.code)\r\n r.toggleCode = markItem(type, {title: \"Toggle code font\", icon: icons.code})\r\n if (type = schema.marks.mark)\r\n r.toggleMark = markItem(type, {title: \"color\", icon: icons.mark})\r\nif (type = schema.marks.link)\r\n r.toggleLink = linkItem(type)\r\n\r\nif (type = schema.nodes.image)\r\n r.insertImage = insertImageItem(type)\r\nif (type = schema.nodes.bullet_list)\r\n r.wrapBulletList = wrapListItem(type, {\r\n   title: \"Wrap in bullet list\",\r\n   icon: icons.bulletList\r\n })\r\nif (type = schema.nodes.ordered_list)\r\n r.wrapOrderedList = wrapListItem(type, {\r\n   title: \"Wrap in ordered list\",\r\n   icon: icons.orderedList\r\n })\r\nif (type = schema.nodes.blockquote)\r\n r.wrapBlockQuote = wrapItem(type, {\r\n   title: \"Wrap in block quote\",\r\n   icon: icons.blockquote\r\n })\r\nif (type = schema.nodes.paragraph)\r\n r.makeParagraph = blockTypeItem(type, {\r\n   title: \"Change to paragraph\",\r\n   label: \"Plain\"\r\n })\r\nif (type = schema.nodes.code_block)\r\n r.makeCodeBlock = blockTypeItem(type, {\r\n   title: \"Change to code block\",\r\n   label: \"Code\"\r\n })\r\nif (type = schema.nodes.heading)\r\n for (let i = 1; i <= 10; i++)\r\n   r[\"makeHead\" + i] = blockTypeItem(type, {\r\n     title: \"Change to heading \" + i,\r\n     label: \"Level \" + i,\r\n     attrs: {level: i}\r\n   })\r\n\r\nif (type = schema.nodes.horizontal_rule) {\r\n let hr = type\r\n r.insertHorizontalRule = new MenuItem({\r\n   title: \"Insert horizontal rule\",\r\n   \r\n   icon:icons.horizontal_rule,\r\n   enable(state) { return canInsert(state, hr) },\r\n   run(state, dispatch) { dispatch(state.tr.replaceSelectionWith(hr.create())) }\r\n })\r\n}\r\n\r\nlet cut = arr => arr.filter(x => x)\r\n// r.insertMenu = new Dropdown(cut([]), {label: \"Insert\"})\r\nr.typeMenu = new Dropdown(cut([\r\n r.makeHead1, r.makeHead2, r.makeHead3, r.makeHead4, r.makeHead5, r.makeHead6\r\n]), {label:'H',css:\"font-weight: bold\",title:'Heading'})\r\n\r\nr.inlineMenu = [cut([r.toggleStrong, r.toggleEm,r.toggleUnderline ,r.toggleCode,r.toggleMark, r.toggleLink,r.toggleStrike,r.insertHorizontalRule,r.insertImage])]\r\nr.blockMenu = [cut([r.wrapBulletList, r.wrapOrderedList, r.wrapBlockQuote, joinUpItem,\r\n                   liftItem, r.makeCodeBlock])]\r\nr.fullMenu = r.inlineMenu.concat([[r.typeMenu]], r.blockMenu,[[undoItem, redoItem]])\r\n\r\nreturn r\r\n}","C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\prosemirror-menu.js",["63","64"],"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\schema.js",[],"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\index.js",[],["65","66"],"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\App.js",["67","68"],"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\code_block.js",[],"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\index.js",[],"C:\\Users\\zoetw\\Documents\\GitHub\\WenChang\\frontend\\src\\components\\App\\icons.js",[],{"ruleId":"69","severity":1,"message":"70","line":16,"column":80,"nodeType":"71","messageId":"72","endLine":16,"endColumn":82},{"ruleId":"73","severity":1,"message":"74","line":49,"column":7,"nodeType":"75","messageId":"76","endLine":49,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":50,"column":7,"nodeType":"75","messageId":"76","endLine":50,"endColumn":39},{"ruleId":"73","severity":1,"message":"74","line":51,"column":7,"nodeType":"75","messageId":"76","endLine":51,"endColumn":38},{"ruleId":"73","severity":1,"message":"74","line":52,"column":7,"nodeType":"75","messageId":"76","endLine":52,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":53,"column":7,"nodeType":"75","messageId":"76","endLine":53,"endColumn":34},{"ruleId":"77","severity":1,"message":"78","line":1,"column":44,"nodeType":"79","messageId":"80","endLine":1,"endColumn":59},{"ruleId":"77","severity":1,"message":"81","line":2,"column":5,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":165,"column":5,"nodeType":"75","messageId":"76","endLine":165,"endColumn":38},{"ruleId":"73","severity":1,"message":"74","line":167,"column":5,"nodeType":"75","messageId":"76","endLine":167,"endColumn":31},{"ruleId":"73","severity":1,"message":"74","line":169,"column":5,"nodeType":"75","messageId":"76","endLine":169,"endColumn":27},{"ruleId":"73","severity":1,"message":"74","line":171,"column":6,"nodeType":"75","messageId":"76","endLine":171,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":173,"column":5,"nodeType":"75","messageId":"76","endLine":173,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":175,"column":6,"nodeType":"75","messageId":"76","endLine":175,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":177,"column":5,"nodeType":"75","messageId":"76","endLine":177,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":180,"column":5,"nodeType":"75","messageId":"76","endLine":180,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":182,"column":5,"nodeType":"75","messageId":"76","endLine":182,"endColumn":36},{"ruleId":"73","severity":1,"message":"74","line":187,"column":5,"nodeType":"75","messageId":"76","endLine":187,"endColumn":37},{"ruleId":"73","severity":1,"message":"74","line":192,"column":5,"nodeType":"75","messageId":"76","endLine":192,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":197,"column":5,"nodeType":"75","messageId":"76","endLine":197,"endColumn":34},{"ruleId":"73","severity":1,"message":"74","line":202,"column":5,"nodeType":"75","messageId":"76","endLine":202,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":207,"column":5,"nodeType":"75","messageId":"76","endLine":207,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":215,"column":5,"nodeType":"75","messageId":"76","endLine":215,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":54,"column":30,"nodeType":"84","messageId":"85","endLine":54,"endColumn":32},{"ruleId":"82","severity":1,"message":"83","line":54,"column":52,"nodeType":"84","messageId":"85","endLine":54,"endColumn":54},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"77","severity":1,"message":"90","line":13,"column":25,"nodeType":"79","messageId":"80","endLine":13,"endColumn":37},{"ruleId":"77","severity":1,"message":"91","line":28,"column":15,"nodeType":"79","messageId":"80","endLine":28,"endColumn":19},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-unused-vars","'DropdownSubmenu' is defined but never used.","Identifier","unusedVar","'selectParentNodeItem' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'arrowHandler' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]